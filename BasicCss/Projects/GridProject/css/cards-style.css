/* fira code font family */
@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;500&display=swap');
/* 
============
Variables
============
*/
:root {
  --primaryColor: #f15025;
  --mainBlack: #222;
  --mainWhite: #fff;
  --offWhite: #f7f7f7;
  --darkGrey: #afafaf;
  --mainTransition: all 0.3s linear;
  --mainSpacing: 0.2rem;
}
/* 
===============
Global Styles
===============
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: "Fira Code", monospace;
  color: var(--mainBlack);
  background: var(--mainWhite);
  line-height: 1.5;
}
a {
  text-decoration: none;
}

img {
  width: 100%;
  display: block;
}

h1,
h2,
h3 {
  text-transform: capitalize;
  letter-spacing: var(--mainSpacing);
  margin-bottom: 1.25rem;
}
h1 {
  font-size: 3rem;
}
h2 {
  margin-bottom: 0;
}
p {
  font-weight: 300;
  font-size: 0.7rem;
  line-height: 2;
}
/* button */
.btn {
  display: inline-block;
  padding: 0.75rem 1.25rem;
  text-transform: capitalize;
  border: 3px solid var(--primaryColor);
  color: var(--primaryColor);
  margin: 3rem;
  transition: var(--mainTransition);
  background: var(--mainWhite);
  font-size: 1rem;
  word-spacing: 0.5rem;
}
.btn:hover {
  background: var(--primaryColor);
  color: var(--mainWhite);
}
/* 
=====================
End of Global Styles
=====================
*/
/* 
=====================
Cards Styles
=====================
*/
.cards-section-title{
    width:90vw;
    margin: 0 auto;
    margin-top: 4rem;
}

.cards-section-title h1{
  font-weight: 500;
  text-align: center;
}

.cards{
    width: 90vw;
    max-width: 1170px;
    margin: 0 auto;
    /* different layouts code is at last */
}

.card{
    border: 1px solid var(--darkGrey);
    margin-bottom: 2rem;
}

.card .img-container img{
  height: 300px;
}

.card-text{
    padding: 1rem 1rem;
}

.card-footer{
    display: grid;
    grid-template-columns: repeat(4,1fr);  
    grid-template-rows: 2.5rem ;
    align-items: center;
    justify-items: center;
    background:var(--darkGrey);
    color: var(--primaryColor);
}
/* 
@media screen and (min-width: 768px){
  .cards{
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: 2rem;
  }

  .card .img-container img{
    height: 300px;   
  }
}

@media screen and (min-width: 992px){
  .cards{
      grid-template-columns: repeat(3, 1fr);
  }
} */

/* USING AUTOFIT AND AUTOFILL
  To use autofill and autofit find out three things 
  1. max-width of the container in which we want to create columns.
  2. find out the total gap of all columns in a row.
  3. decide how many columns you want in a row when screen size is 
      equal to max-width.
    
      sizeof oneColumn : (max-width - totalGap)/totalColumns;

      Now , 
      grid-template-columns: repeat(autofill/autofit, minmax(oneColumn, 1fr)

      so now when screen size is max it only creates no. of columns that you decided and below that screen size all columns take 1 fr of screen size.
      And in minmax we pass the minimum column size at max screen size which we finded using formula and another parameter show what to do when screen is not max-width.
*/

/* create different columns layout for different size without any media query 
    max-width = 1170px 
    columns = 3 
    gap = 2 
    2 gap in three column 1 gap equal to 2 rem so total 64px 
    (1170 - 64)/3 = 368px */
.cards{
  display: grid;
  column-gap: 2rem;
  /* if there's space remains then auto-fit share that space to the present card
  But in auto-fill present card not take the empty space. They only acquire their alloted space */
  grid-template-columns: repeat(auto-fill, minmax(368px, 1fr));
}


/* 
=====================
End of Cards Styles
=====================
*/